//
//  kaniTexFormat.h
//  KaniTexTool
//
//  Created by Christian Helmich on 15.05.11.
//  Copyright 2011 __MyCompanyName__. All rights reserved.
//

#pragma once
#ifndef KANI_TEX_FORMAT
#define KANI_TEX_FORMAT	1

#include <pvrtex/PVRTexLibGlobals.h>
#include <boost/preprocessor/cat.hpp>
#include <boost/preprocessor/seq/for_each.hpp>
#include <boost/preprocessor/tuple/elem.hpp>

namespace kani { namespace texture {

	using pvrtexlib::PixelType;

	//TODO: expand seq element to be tuple(string, pvrtexlib PixelType, ...)
#define BITUPLE_SAME(x)	(x, x)
#define DEFAULT_FORMAT_SEQ	\
	((SameAsInput,	-1))	\
	\
	((A4R4G4B4,		MGLPT_ARGB_4444))	\
	((A1R5G5B5,		MGLPT_ARGB_1555))	\
	((R5G6B5,		MGLPT_RGB_565))		\
	((R5G5B5,		MGLPT_RGB_555))		\
	((A8R8G8B8,		MGLPT_ARGB_8888))	\
	((A8R3G3B3,		MGLPT_ARGB_8332))	\
	((I8,			MGLPT_I_8))			\
	((A8,			OGL_A_8))			\
	((A8I8,			MGLPT_AI_88))		\
	((BITMAP,		MGLPT_1_BPP))		\
	((VY1UY0,		MGLPT_VY1UY0))		\
	((Y1VY0U,		MGLPT_Y1VY0U))		\
	((R4G44BA4,		OGL_RGBA_4444))		\
	((R5G5B5A1,		OGL_RGBA_5551))		\
	((R8G8B8A8,		OGL_RGBA_8888))		\
	((R8G8B8,		OGL_RGB_888))		\
	((B8G8R8A8,		OGL_BGRA_8888))		\
	\
	((PVRTC2,		MGLPT_PVRTC2))		\
	((PVRTC4,		MGLPT_PVRTC4))		\
	((DXT1,			D3D_DXT1))			\
	((DXT2,			D3D_DXT2))			\
	((DXT3,			D3D_DXT3))			\
	((DXT4,			D3D_DXT4))			\
	((DXT5,			D3D_DXT5))			\
	((ETC,			ETC_RGB_4BPP))		\
	\
	((R3G3B2,		D3D_RGB_332))		\
	((A10B10G10R10,	D3D_ABGR_2101010))	\
	((A10R10G10B10,	D3D_ARGB_2101010))	\
	((G16R16,		D3D_GR_1616))		\
	((V16U16,		D3D_VU_1616))		\
	((A16B16G16R16,	D3D_ABGR_16161616))	\
	((R16F,			D3D_R16F))			\
	((GR16F,		D3D_GR_1616F))		\
	((ABGR16F,		D3D_ABGR_16161616F))\
	((R32F,			D3D_R32F))			\
	((GR32F,		D3D_GR_3232F))		\
	((ABGR32F,		D3D_ABGR_32323232F))\
	\
	((GL_R4G4B4A4,	OGL_RGBA_4444))	\
	((GL_R5G5B5A1,	OGL_RGBA_5551))	\
	((GL_R8G8B8A8,	OGL_RGBA_8888))	\
	((GL_R5G6B5,	OGL_RGB_565))	\
	((GL_R5G5B5,	OGL_RGB_555))	\
	((GL_R8G8B8,	OGL_RGB_888))	\
	((GL_I8,		OGL_I_8))		\
	((GL_A8,		OGL_A_8))		\
	((GL_A8I8,		OGL_AI_88))		\
	((GL_PVRTC2,	OGL_PVRTC2))	\
	((GL_PVRTC4,	OGL_PVRTC4))	\
	((GL_B8G8R8A8,	OGL_BGRA_8888))	\


#define	EXTENDED_FORMAT_SEQ	\
	(BITUPLE_SAME(MGLPT_ARGB_4444))	\
	(BITUPLE_SAME(MGLPT_ARGB_1555))	\
	(BITUPLE_SAME(MGLPT_RGB_565))	\
	(BITUPLE_SAME(MGLPT_RGB_555))	\
	(BITUPLE_SAME(MGLPT_RGB_888))	\
	(BITUPLE_SAME(MGLPT_ARGB_8888))	\
	(BITUPLE_SAME(MGLPT_ARGB_8332))	\
	(BITUPLE_SAME(MGLPT_I_8))		\
	(BITUPLE_SAME(MGLPT_AI_88))		\
	(BITUPLE_SAME(MGLPT_1_BPP))		\
	(BITUPLE_SAME(MGLPT_VY1UY0))	\
	(BITUPLE_SAME(MGLPT_Y1VY0U))	\
	(BITUPLE_SAME(MGLPT_PVRTC2))	\
	(BITUPLE_SAME(MGLPT_PVRTC4))	\


#define	GL_FORMAT_SEQ	\
	(BITUPLE_SAME(OGL_RGBA_4444))	\
	(BITUPLE_SAME(OGL_RGBA_5551))	\
	(BITUPLE_SAME(OGL_RGBA_8888))	\
	(BITUPLE_SAME(OGL_RGB_565))		\
	(BITUPLE_SAME(OGL_RGB_555))		\
	(BITUPLE_SAME(OGL_RGB_888))		\
	(BITUPLE_SAME(OGL_I_8))			\
	(BITUPLE_SAME(OGL_AI_88))		\
	(BITUPLE_SAME(OGL_PVRTC2))		\
	(BITUPLE_SAME(OGL_PVRTC4))		\
	(BITUPLE_SAME(OGL_BGRA_8888))	\
	(BITUPLE_SAME(OGL_A_8))			\


#define	D3D_FORMAT_SEQ	\
	(BITUPLE_SAME(D3D_DXT1))	\
	(BITUPLE_SAME(D3D_DXT2))	\
	(BITUPLE_SAME(D3D_DXT3))	\
	(BITUPLE_SAME(D3D_DXT4))	\
	(BITUPLE_SAME(D3D_DXT5))	\
	\
	(BITUPLE_SAME(D3D_RGB_332))		\
	(BITUPLE_SAME(D3D_AL_44))		\
	(BITUPLE_SAME(D3D_LVU_655))		\
	(BITUPLE_SAME(D3D_XLVU_8888))	\
	(BITUPLE_SAME(D3D_QWVU_8888))	\
	(BITUPLE_SAME(D3D_ABGR_2101010))\
	(BITUPLE_SAME(D3D_ARGB_2101010))\
	(BITUPLE_SAME(D3D_AWVU_2101010))\
	(BITUPLE_SAME(D3D_GR_1616))		\
	(BITUPLE_SAME(D3D_VU_1616))		\
	(BITUPLE_SAME(D3D_ABGR_16161616))	\
	(BITUPLE_SAME(D3D_R16F))		\
	(BITUPLE_SAME(D3D_GR_1616F))	\
	(BITUPLE_SAME(D3D_ABGR_16161616F))	\
	(BITUPLE_SAME(D3D_R32F))		\
	(BITUPLE_SAME(D3D_GR_3232F))	\
	(BITUPLE_SAME(D3D_ABGR_32323232F))	\
	(BITUPLE_SAME(D3D_A8))			\
	(BITUPLE_SAME(D3D_V8U8))		\
	(BITUPLE_SAME(D3D_L16))			\
	(BITUPLE_SAME(D3D_L8))			\
	(BITUPLE_SAME(D3D_AL_88))		\
	(BITUPLE_SAME(D3D_UYVY))		\
	(BITUPLE_SAME(D3D_YUY2))		\


#define	DX10_FORMAT_SEQ	\
	(BITUPLE_SAME(DX10_R32G32B32A32_FLOAT))	\
	(BITUPLE_SAME(DX10_R32G32B32A32_UINT))	\
	(BITUPLE_SAME(DX10_R32G32B32A32_SINT))	\
	(BITUPLE_SAME(DX10_R32G32B32_FLOAT))	\
	(BITUPLE_SAME(DX10_R32G32B32_UINT))		\
	(BITUPLE_SAME(DX10_R32G32B32_SINT))		\
	(BITUPLE_SAME(DX10_R16G16B16A16_FLOAT))	\
	(BITUPLE_SAME(DX10_R16G16B16A16_UNORM))	\
	(BITUPLE_SAME(DX10_R16G16B16A16_UINT))	\
	(BITUPLE_SAME(DX10_R16G16B16A16_SNORM))	\
	(BITUPLE_SAME(DX10_R16G16B16A16_SINT))	\
	(BITUPLE_SAME(DX10_R32G32_FLOAT))		\
	(BITUPLE_SAME(DX10_R32G32_UINT))		\
	(BITUPLE_SAME(DX10_R32G32_SINT))		\
	(BITUPLE_SAME(DX10_R10G10B10A2_UNORM))	\
	(BITUPLE_SAME(DX10_R10G10B10A2_UINT))	\
	(BITUPLE_SAME(DX10_R8G8B8A8_UNORM))		\
	(BITUPLE_SAME(DX10_R8G8B8A8_UNORM_SRGB))\
	(BITUPLE_SAME(DX10_R8G8B8A8_UINT))		\
	(BITUPLE_SAME(DX10_R8G8B8A8_SNORM))		\
	(BITUPLE_SAME(DX10_R8G8B8A8_SINT))		\
	(BITUPLE_SAME(DX10_R16G16_FLOAT))		\
	(BITUPLE_SAME(DX10_R16G16_UNORM))		\
	(BITUPLE_SAME(DX10_R16G16_UINT))		\
	(BITUPLE_SAME(DX10_R16G16_SNORM))		\
	(BITUPLE_SAME(DX10_R16G16_SINT))		\
	(BITUPLE_SAME(DX10_R32_FLOAT))			\
	(BITUPLE_SAME(DX10_R32_UINT))			\
	(BITUPLE_SAME(DX10_R32_SINT))			\
	(BITUPLE_SAME(DX10_R8G8_UNORM))			\
	(BITUPLE_SAME(DX10_R8G8_UINT))			\
	(BITUPLE_SAME(DX10_R8G8_SNORM))			\
	(BITUPLE_SAME(DX10_R8G8_SINT))			\
	(BITUPLE_SAME(DX10_R16_FLOAT))			\
	(BITUPLE_SAME(DX10_R16_UNORM))			\
	(BITUPLE_SAME(DX10_R16_UINT))			\
	(BITUPLE_SAME(DX10_R16_SNORM))			\
	(BITUPLE_SAME(DX10_R16_SINT))			\
	(BITUPLE_SAME(DX10_R8_UNORM))			\
	(BITUPLE_SAME(DX10_R8_UINT))			\
	(BITUPLE_SAME(DX10_R8_SNORM))			\
	(BITUPLE_SAME(DX10_R8_SINT))			\
	(BITUPLE_SAME(DX10_A8_UNORM))			\
	(BITUPLE_SAME(DX10_R1_UNORM))			\
	(BITUPLE_SAME(DX10_BC1_UNORM))			\
	(BITUPLE_SAME(DX10_BC1_UNORM_SRGB))		\
	(BITUPLE_SAME(DX10_BC2_UNORM))			\
	(BITUPLE_SAME(DX10_BC2_UNORM_SRGB))		\
	(BITUPLE_SAME(DX10_BC3_UNORM))			\
	(BITUPLE_SAME(DX10_BC3_UNORM_SRGB))		\


#define	VG_FORMAT_SEQ	\
	(BITUPLE_SAME(ePT_VG_sRGBX_8888))	\
	(BITUPLE_SAME(ePT_VG_sRGBA_8888))	\
	(BITUPLE_SAME(ePT_VG_sRGBA_8888_PRE))	\
	(BITUPLE_SAME(ePT_VG_sRGB_565))		\
	(BITUPLE_SAME(ePT_VG_sRGBA_5551))	\
	(BITUPLE_SAME(ePT_VG_sRGBA_4444))	\
	(BITUPLE_SAME(ePT_VG_sL_8))			\
	(BITUPLE_SAME(ePT_VG_lRGBX_8888))	\
	(BITUPLE_SAME(ePT_VG_lRGBA_8888))	\
	(BITUPLE_SAME(ePT_VG_lRGBA_8888_PRE))	\
	(BITUPLE_SAME(ePT_VG_lL_8))			\
	(BITUPLE_SAME(ePT_VG_A_8))			\
	(BITUPLE_SAME(ePT_VG_BW_1))			\
	(BITUPLE_SAME(ePT_VG_sXRGB_8888))	\
	(BITUPLE_SAME(ePT_VG_sARGB_8888))	\
	(BITUPLE_SAME(ePT_VG_sARGB_8888_PRE))	\
	(BITUPLE_SAME(ePT_VG_sARGB_1555))	\
	(BITUPLE_SAME(ePT_VG_sARGB_4444))	\
	(BITUPLE_SAME(ePT_VG_lXRGB_8888))	\
	(BITUPLE_SAME(ePT_VG_lARGB_8888))	\
	(BITUPLE_SAME(ePT_VG_lARGB_8888_PRE))	\
	(BITUPLE_SAME(ePT_VG_sBGRX_8888))	\
	(BITUPLE_SAME(ePT_VG_sBGRA_8888))	\
	(BITUPLE_SAME(ePT_VG_sBGRA_8888_PRE))	\
	(BITUPLE_SAME(ePT_VG_sBGR_565))		\
	(BITUPLE_SAME(ePT_VG_sBGRA_5551))	\
	(BITUPLE_SAME(ePT_VG_sBGRA_4444))	\
	(BITUPLE_SAME(ePT_VG_lBGRX_8888))	\
	(BITUPLE_SAME(ePT_VG_lBGRA_8888))	\
	(BITUPLE_SAME(ePT_VG_lBGRA_8888_PRE))	\
	(BITUPLE_SAME(ePT_VG_sXBGR_8888))	\
	(BITUPLE_SAME(ePT_VG_sABGR_8888))	\
	(BITUPLE_SAME(ePT_VG_sABGR_8888_PRE))	\
	(BITUPLE_SAME(ePT_VG_sABGR_1555))	\
	(BITUPLE_SAME(ePT_VG_sABGR_4444))	\
	(BITUPLE_SAME(ePT_VG_lXBGR_8888))	\
	(BITUPLE_SAME(ePT_VG_lABGR_8888))	\
	(BITUPLE_SAME(ePT_VG_lABGR_8888_PRE))	\



#define	FORMAT_SEQ	\
	DEFAULT_FORMAT_SEQ	\
	EXTENDED_FORMAT_SEQ	\
	GL_FORMAT_SEQ		\
	D3D_FORMAT_SEQ		\
	DX10_FORMAT_SEQ		\
	VG_FORMAT_SEQ		\


#define BITUPLE_1ST(tuple)	BOOST_PP_TUPLE_ELEM(2,0, tuple)
#define BITUPLE_2ND(tuple)	BOOST_PP_TUPLE_ELEM(2,1, tuple)

#define M_CAT_1ST(r, data, elem) BOOST_PP_CAT(data, BITUPLE_1ST(elem)),
		
	enum Format
	{
		BOOST_PP_SEQ_FOR_EACH(M_CAT_1ST, Format_, FORMAT_SEQ) // Format_x
		Format_Count		
	};
#undef M_CAT	

	PixelType	getSupportedPixelType(const char* textFormat);
}}

#endif	//KANI_TEX_FORMAT